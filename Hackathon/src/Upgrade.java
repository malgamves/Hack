
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.*;
import static java.sql.JDBCType.NULL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
 
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author malga
 */
public class Upgrade extends javax.swing.JFrame {
    String dept="";
    public void set(String dep)
    {
        dept=dep;
    }
    /**
     * Creates new form Upgrade
     */
    public Upgrade() {
        initComponents();
    }
    private DefaultTableModel dtm;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ic_arrow_back_black_48dp_1x.png"))); // NOI18N
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Add row");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vehicle", "Initial Reading", "Final Reading", "Description", "Difference", "Amount", "Price/llitre"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Upload");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ic_arrow_back_black_48dp_1x.png"))); // NOI18N
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jMenu1.setText("Dashboard");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Logout");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(235, 235, 235))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dtm = (DefaultTableModel) jTable1.getModel();
        dtm.addRow(new Object[]{});
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dtm.removeRow(WIDTH);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            //Class.forName("oracle.jdbc.OracleDriver");
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
        }
       Connection con = null;
        try {
            con = DriverManager.getConnection(  
                    "jdbc:mysql://localhost:3306/vmc","root","");
        } catch (SQLException ex) {
            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
        }
       Statement stmt = null;
        try {
            stmt = con.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
        }
       
            ResultSet rs = null;
        PreparedStatement preparedStmt = null;
        int flag=0;
        for(int i=0;i<jTable1.getRowCount();i++)
        {
            for(int j=0;j<jTable1.getColumnCount();j++){
            if(jTable1.getValueAt(i, j)==NULL)
            {
                JOptionPane.showMessageDialog(rootPane, "Some data is empty!!!");
                flag=1;
                break;
            }
        }
        }   
        String Vehicle="",Description="",init,fin,diff,amount="",apl="",mil="";
        int mile,fuel,t1,t2,t3;
        if(flag==0)
        {   
            ArrayList<String> list=new ArrayList<String>();
            for(int i=0;i<jTable1.getRowCount();i++)
            {   System.out.print(jTable1.getColumnCount());
                for(int j=0;j<jTable1.getColumnCount();j++)
                {System.out.println(jTable1.getValueAt(i,j),j);
                    list.add((String) jTable1.getValueAt(i,j));
                }
                Vehicle=list.get(0);
                init=list.get(1);
                fin=list.get(2);
                diff=String.valueOf(Integer.parseInt(fin)-Integer.parseInt(init));
                Description=list.get(3);
                amount=list.get(5);
                apl=list.get(6);
                t1=Integer.valueOf(amount);
                System.out.println(list.get(6));
                t2=Integer.parseInt(list.get(6));
                t3=Integer.valueOf(diff);
                fuel=t1/t2;
                mile=t3/fuel;
                mil=String.valueOf(mile);
                switch (dept) {
                    case "TRANSPORT":
                        {
                            String query="INSERT INTO transport(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?))";
                            try {
                                preparedStmt = con.prepareStatement(query);
                                preparedStmt.setString(1,Vehicle);
                                preparedStmt.setString(2,init);
                                preparedStmt.setString(3,fin);
                                preparedStmt.setString(4,Description);
                                preparedStmt.setString(5,diff);
                                preparedStmt.setString(6,amount);
                                preparedStmt.setString(7,apl);
                                preparedStmt.setString(8,mil);
                                preparedStmt.addBatch();
                            } catch (SQLException ex) {
                                Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                            }                   break;
                        }
                    case "WATER":
                    {
                        String query="INSERT INTO water(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?)";
                        try {
                            preparedStmt = con.prepareStatement(query);
                            preparedStmt.setString(1,Vehicle);
                            preparedStmt.setString(2,init);
                            preparedStmt.setString(3,fin);
                            preparedStmt.setString(4,Description);
                            preparedStmt.setString(5,diff);
                            preparedStmt.setString(6,amount);
                            preparedStmt.setString(7,apl);
                            preparedStmt.setString(8,mil);
                            preparedStmt.addBatch();
                        } catch (SQLException ex) {
                            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                        }                   break;
                    }
                    case "SURVEY":
                    {
                        String query="INSERT INTO survey(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?)";
                        try {
                            preparedStmt = con.prepareStatement(query);
                            preparedStmt.setString(1,Vehicle);
                            preparedStmt.setString(2,init);
            preparedStmt.setString(3,fin);
            preparedStmt.setString(4,Description);
            preparedStmt.setString(5,diff);
            preparedStmt.setString(6,amount);
            preparedStmt.setString(7,apl);
            preparedStmt.setString(8,mil);
            preparedStmt.addBatch();
                        } catch (SQLException ex) {
                            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                        }                   break;
                    }
                    case "EDUCATION":
                    {
                        String query="INSERT INTO education(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?)";
                        try {
                            preparedStmt = con.prepareStatement(query);
                            preparedStmt.setString(1,Vehicle);
            preparedStmt.setString(2,init);
            preparedStmt.setString(3,fin);
            preparedStmt.setString(4,Description);
            preparedStmt.setString(5,diff);
            preparedStmt.setString(6,amount);
            preparedStmt.setString(7,apl);
            preparedStmt.setString(8,mil);
            preparedStmt.addBatch();
                        } catch (SQLException ex) {
                            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                        }                   break;
                    }
                    case "ELECTRICITY":
                    {
                        String query="INSERT INTO electricity(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?)";
                        try {
                            preparedStmt = con.prepareStatement(query);
            preparedStmt.setString(1,Vehicle);
            preparedStmt.setString(2,init);
            preparedStmt.setString(3,fin);
            preparedStmt.setString(4,Description);
            preparedStmt.setString(5,diff);
            preparedStmt.setString(6,amount);
            preparedStmt.setString(7,apl);
            preparedStmt.setString(8,mil);
            preparedStmt.addBatch();
                        } catch (SQLException ex) {
                            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                        }                   break;
                    }
                    case "INCOMETAX":
                    {
                        String query="INSERT INTO incometax(VEHICLENO,INITIAL,FINAL,DESCRIPTION,DIFFERENCE,AMOUNT,APL,MILEAGE) values (?,?,?,?,?,?,?,?)";
                        try {
                            preparedStmt = con.prepareStatement(query);
                            preparedStmt.setString(1,Vehicle);
            preparedStmt.setString(2,init);
            preparedStmt.setString(3,fin);
            preparedStmt.setString(4,Description);
            preparedStmt.setString(5,diff);
            preparedStmt.setString(6,amount);
            preparedStmt.setString(7,apl);
            preparedStmt.setString(8,mil);
            preparedStmt.addBatch();
        } catch (SQLException ex) {
            Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
        }                   break;
                        }
                    default:
                        System.out.println("Unsuccessful");
                        break;
                }
                try {
                    preparedStmt.executeBatch();
                } catch (SQLException ex) {
                    Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
                }
                
        }
            
            JOptionPane.showConfirmDialog(rootPane,"Records added successfully");
            jTable1.removeAll();
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Upgrade.class.getName()).log(Level.SEVERE, null, ex);
            }
}
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        Login n = new Login();
        n.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        Help h =new Help();
        h.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        Dashboard d=new Dashboard();          
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        Dashboard d=new Dashboard();
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        Dashboard d=new Dashboard();
        d.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
    public void set(String User,String Dept)
    {
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Upgrade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
